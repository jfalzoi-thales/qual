# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nms_host_api.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()

from nms.host.pb2 import common_nm_pb2

DESCRIPTOR = _descriptor.FileDescriptor(
  name='nms_host_api.proto',
  package='',
  serialized_pb=_b('\n\x12nms_host_api.proto\x1a\x0f\x63ommon_nm.proto\"R\n\rVLANAssignReq\x12\x11\n\tport_name\x18\x01 \x03(\t\x12\x16\n\x0e\x65xternal_vlans\x18\x02 \x03(\r\x12\x16\n\x0einternal_vlans\x18\x03 \x03(\r\"?\n\x0eVLANAssignResp\x12\x0f\n\x07success\x18\x01 \x02(\x08\x12\x1c\n\x05\x65rror\x18\x02 \x01(\x0b\x32\r.ErrorMessage\"\x0f\n\rSwitchInfoReq\"Z\n\x0eSwitchInfoResp\x12\x0f\n\x07success\x18\x01 \x02(\x08\x12\x1c\n\x05\x65rror\x18\x02 \x01(\x0b\x32\r.ErrorMessage\x12\x19\n\x06values\x18\x03 \x03(\x0b\x32\t.Property\"\x0e\n\x0cInventoryReq\"Z\n\rInventoryResp\x12\x0f\n\x07success\x18\x01 \x02(\x08\x12\x1c\n\x05\x65rror\x18\x02 \x01(\x0b\x32\r.ErrorMessage\x12\x1a\n\x06values\x18\x03 \x03(\x0b\x32\n.ValueResp\"7\n\nUpgradeReq\x12\x1b\n\x06target\x18\x01 \x02(\x0e\x32\x0b.TargetEnum\x12\x0c\n\x04path\x18\x02 \x02(\t\"<\n\x0bUpgradeResp\x12\x0f\n\x07success\x18\x01 \x02(\x08\x12\x1c\n\x05\x65rror\x18\x02 \x01(\x0b\x32\r.ErrorMessage*\x8d\x02\n\rErrorCodeEnum\x12\x11\n\x0cINVALID_NAME\x10\xe8\x07\x12\x1b\n\x16VLAN_ASSIGNMENT_FAILED\x10\xe9\x07\x12\x1d\n\x18\x45RROR_PROCESSING_MESSAGE\x10\xea\x07\x12%\n NETWORK_MANAGEMENT_SERVICE_ERROR\x10\xeb\x07\x12(\n#FAILED_OBTAINING_SWITCH_INFORMATION\x10\xf3\x07\x12 \n\x1b\x46\x41ILURE_TO_OBTAIN_INVENTORY\x10\xfe\x07\x12\x13\n\x0eUPGRADE_FAILED\x10\x87\x08\x12%\n INVALID_UPGRADE_PACKAGE_PROVIDED\x10\x88\x08*\"\n\nTargetEnum\x12\n\n\x06SWITCH\x10\x00\x12\x08\n\x04I350\x10\x01P\x00')
  ,
  dependencies=[common_nm_pb2.DESCRIPTOR, ])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_ERRORCODEENUM = _descriptor.EnumDescriptor(
  name='ErrorCodeEnum',
  full_name='ErrorCodeEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INVALID_NAME', index=0, number=1000,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VLAN_ASSIGNMENT_FAILED', index=1, number=1001,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR_PROCESSING_MESSAGE', index=2, number=1002,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NETWORK_MANAGEMENT_SERVICE_ERROR', index=3, number=1003,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILED_OBTAINING_SWITCH_INFORMATION', index=4, number=1011,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILURE_TO_OBTAIN_INVENTORY', index=5, number=1022,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPGRADE_FAILED', index=6, number=1031,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_UPGRADE_PACKAGE_PROVIDED', index=7, number=1032,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=525,
  serialized_end=794,
)
_sym_db.RegisterEnumDescriptor(_ERRORCODEENUM)

ErrorCodeEnum = enum_type_wrapper.EnumTypeWrapper(_ERRORCODEENUM)
_TARGETENUM = _descriptor.EnumDescriptor(
  name='TargetEnum',
  full_name='TargetEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SWITCH', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='I350', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=796,
  serialized_end=830,
)
_sym_db.RegisterEnumDescriptor(_TARGETENUM)

TargetEnum = enum_type_wrapper.EnumTypeWrapper(_TARGETENUM)
INVALID_NAME = 1000
VLAN_ASSIGNMENT_FAILED = 1001
ERROR_PROCESSING_MESSAGE = 1002
NETWORK_MANAGEMENT_SERVICE_ERROR = 1003
FAILED_OBTAINING_SWITCH_INFORMATION = 1011
FAILURE_TO_OBTAIN_INVENTORY = 1022
UPGRADE_FAILED = 1031
INVALID_UPGRADE_PACKAGE_PROVIDED = 1032
SWITCH = 0
I350 = 1



_VLANASSIGNREQ = _descriptor.Descriptor(
  name='VLANAssignReq',
  full_name='VLANAssignReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='port_name', full_name='VLANAssignReq.port_name', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='external_vlans', full_name='VLANAssignReq.external_vlans', index=1,
      number=2, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='internal_vlans', full_name='VLANAssignReq.internal_vlans', index=2,
      number=3, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=39,
  serialized_end=121,
)


_VLANASSIGNRESP = _descriptor.Descriptor(
  name='VLANAssignResp',
  full_name='VLANAssignResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='VLANAssignResp.success', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='VLANAssignResp.error', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=123,
  serialized_end=186,
)


_SWITCHINFOREQ = _descriptor.Descriptor(
  name='SwitchInfoReq',
  full_name='SwitchInfoReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=188,
  serialized_end=203,
)


_SWITCHINFORESP = _descriptor.Descriptor(
  name='SwitchInfoResp',
  full_name='SwitchInfoResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='SwitchInfoResp.success', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='SwitchInfoResp.error', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='values', full_name='SwitchInfoResp.values', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=205,
  serialized_end=295,
)


_INVENTORYREQ = _descriptor.Descriptor(
  name='InventoryReq',
  full_name='InventoryReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=297,
  serialized_end=311,
)


_INVENTORYRESP = _descriptor.Descriptor(
  name='InventoryResp',
  full_name='InventoryResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='InventoryResp.success', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='InventoryResp.error', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='values', full_name='InventoryResp.values', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=313,
  serialized_end=403,
)


_UPGRADEREQ = _descriptor.Descriptor(
  name='UpgradeReq',
  full_name='UpgradeReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='target', full_name='UpgradeReq.target', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path', full_name='UpgradeReq.path', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=405,
  serialized_end=460,
)


_UPGRADERESP = _descriptor.Descriptor(
  name='UpgradeResp',
  full_name='UpgradeResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='UpgradeResp.success', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='UpgradeResp.error', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=462,
  serialized_end=522,
)

_VLANASSIGNRESP.fields_by_name['error'].message_type = common_nm_pb2._ERRORMESSAGE
_SWITCHINFORESP.fields_by_name['error'].message_type = common_nm_pb2._ERRORMESSAGE
_SWITCHINFORESP.fields_by_name['values'].message_type = common_nm_pb2._PROPERTY
_INVENTORYRESP.fields_by_name['error'].message_type = common_nm_pb2._ERRORMESSAGE
_INVENTORYRESP.fields_by_name['values'].message_type = common_nm_pb2._VALUERESP
_UPGRADEREQ.fields_by_name['target'].enum_type = _TARGETENUM
_UPGRADERESP.fields_by_name['error'].message_type = common_nm_pb2._ERRORMESSAGE
DESCRIPTOR.message_types_by_name['VLANAssignReq'] = _VLANASSIGNREQ
DESCRIPTOR.message_types_by_name['VLANAssignResp'] = _VLANASSIGNRESP
DESCRIPTOR.message_types_by_name['SwitchInfoReq'] = _SWITCHINFOREQ
DESCRIPTOR.message_types_by_name['SwitchInfoResp'] = _SWITCHINFORESP
DESCRIPTOR.message_types_by_name['InventoryReq'] = _INVENTORYREQ
DESCRIPTOR.message_types_by_name['InventoryResp'] = _INVENTORYRESP
DESCRIPTOR.message_types_by_name['UpgradeReq'] = _UPGRADEREQ
DESCRIPTOR.message_types_by_name['UpgradeResp'] = _UPGRADERESP
DESCRIPTOR.enum_types_by_name['ErrorCodeEnum'] = _ERRORCODEENUM
DESCRIPTOR.enum_types_by_name['TargetEnum'] = _TARGETENUM

VLANAssignReq = _reflection.GeneratedProtocolMessageType('VLANAssignReq', (_message.Message,), dict(
  DESCRIPTOR = _VLANASSIGNREQ,
  __module__ = 'nms_host_api_pb2'
  # @@protoc_insertion_point(class_scope:VLANAssignReq)
  ))
_sym_db.RegisterMessage(VLANAssignReq)

VLANAssignResp = _reflection.GeneratedProtocolMessageType('VLANAssignResp', (_message.Message,), dict(
  DESCRIPTOR = _VLANASSIGNRESP,
  __module__ = 'nms_host_api_pb2'
  # @@protoc_insertion_point(class_scope:VLANAssignResp)
  ))
_sym_db.RegisterMessage(VLANAssignResp)

SwitchInfoReq = _reflection.GeneratedProtocolMessageType('SwitchInfoReq', (_message.Message,), dict(
  DESCRIPTOR = _SWITCHINFOREQ,
  __module__ = 'nms_host_api_pb2'
  # @@protoc_insertion_point(class_scope:SwitchInfoReq)
  ))
_sym_db.RegisterMessage(SwitchInfoReq)

SwitchInfoResp = _reflection.GeneratedProtocolMessageType('SwitchInfoResp', (_message.Message,), dict(
  DESCRIPTOR = _SWITCHINFORESP,
  __module__ = 'nms_host_api_pb2'
  # @@protoc_insertion_point(class_scope:SwitchInfoResp)
  ))
_sym_db.RegisterMessage(SwitchInfoResp)

InventoryReq = _reflection.GeneratedProtocolMessageType('InventoryReq', (_message.Message,), dict(
  DESCRIPTOR = _INVENTORYREQ,
  __module__ = 'nms_host_api_pb2'
  # @@protoc_insertion_point(class_scope:InventoryReq)
  ))
_sym_db.RegisterMessage(InventoryReq)

InventoryResp = _reflection.GeneratedProtocolMessageType('InventoryResp', (_message.Message,), dict(
  DESCRIPTOR = _INVENTORYRESP,
  __module__ = 'nms_host_api_pb2'
  # @@protoc_insertion_point(class_scope:InventoryResp)
  ))
_sym_db.RegisterMessage(InventoryResp)

UpgradeReq = _reflection.GeneratedProtocolMessageType('UpgradeReq', (_message.Message,), dict(
  DESCRIPTOR = _UPGRADEREQ,
  __module__ = 'nms_host_api_pb2'
  # @@protoc_insertion_point(class_scope:UpgradeReq)
  ))
_sym_db.RegisterMessage(UpgradeReq)

UpgradeResp = _reflection.GeneratedProtocolMessageType('UpgradeResp', (_message.Message,), dict(
  DESCRIPTOR = _UPGRADERESP,
  __module__ = 'nms_host_api_pb2'
  # @@protoc_insertion_point(class_scope:UpgradeResp)
  ))
_sym_db.RegisterMessage(UpgradeResp)


# @@protoc_insertion_point(module_scope)
