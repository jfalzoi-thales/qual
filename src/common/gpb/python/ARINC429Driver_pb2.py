# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ARINC429Driver.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ARINC429Driver.proto',
  package='mpsqual',
  serialized_pb=_b('\n\x14\x41RINC429Driver.proto\x12\x07mpsqual\"\x97\x02\n\x07Request\x12\x13\n\x0b\x63hannelName\x18\x01 \x02(\t\x12.\n\x04type\x18\x02 \x02(\x0e\x32 .mpsqual.Request.RequestTypeEnum\x12)\n\noutputData\x18\x03 \x01(\x0b\x32\x13.mpsqual.OutputDataH\x00\x12(\n\x06\x63onfig\x18\x04 \x01(\x0b\x32\x16.mpsqual.ChannelConfigH\x00\"i\n\x0fRequestTypeEnum\x12\x10\n\x0cRECEIVE_DATA\x10\x01\x12\x11\n\rGET_OCCUPANCY\x10\x02\x12\x0e\n\nGET_CONFIG\x10\x03\x12\x11\n\rTRANSMIT_DATA\x10\x04\x12\x0e\n\nSET_CONFIG\x10\x05\x42\x07\n\x05param\"\xf6\x03\n\x08Response\x12\x13\n\x0b\x63hannelName\x18\x01 \x02(\t\x12\x30\n\x04type\x18\x02 \x02(\x0e\x32\".mpsqual.Response.ResponseTypeEnum\x12\x32\n\terrorCode\x18\x03 \x02(\x0e\x32\x1f.mpsqual.Response.ErrorCodeEnum\x12\'\n\tinputData\x18\x04 \x01(\x0b\x32\x12.mpsqual.InputDataH\x00\x12(\n\x06\x63onfig\x18\x05 \x01(\x0b\x32\x16.mpsqual.ChannelConfigH\x00\x12\x13\n\toccupancy\x18\x06 \x01(\rH\x00\"I\n\x10ResponseTypeEnum\x12\x0e\n\nINPUT_DATA\x10\x01\x12\r\n\tOCCUPANCY\x10\x02\x12\n\n\x06\x43ONFIG\x10\x03\x12\n\n\x06STATUS\x10\x04\"\xb2\x01\n\rErrorCodeEnum\x12\x08\n\x04NONE\x10\x00\x12\x11\n\rNOT_SUPPORTED\x10\x01\x12\x0f\n\x0bINVALID_REQ\x10\x02\x12\x13\n\x0fINVALID_CHANNEL\x10\x03\x12\x12\n\x0eINVALID_CONFIG\x10\x04\x12\x14\n\x10OPERATION_FAILED\x10\x05\x12\x1b\n\x17OPERATION_NOT_AVAILABLE\x10\x06\x12\x0c\n\x08NO_SPACE\x10\x07\x12\t\n\x05OTHER\x10\x08\x42\x07\n\x05param\"\xaa\x03\n\x05\x45vent\x12\x13\n\x0b\x63hannelName\x18\x01 \x01(\t\x12*\n\x04type\x18\x02 \x02(\x0e\x32\x1c.mpsqual.Event.EventTypeEnum\x12/\n\terrorCode\x18\x03 \x02(\x0e\x32\x1c.mpsqual.Event.ErrorCodeEnum\x12&\n\x06\x63onfig\x18\x04 \x01(\x0b\x32\x16.mpsqual.ChannelConfig\"R\n\rEventTypeEnum\x12\x0e\n\nDATA_READY\x10\x01\x12\r\n\tOVERWRITE\x10\x02\x12\x10\n\x0c\x44RIVER_ERROR\x10\x03\x12\x10\n\x0c\x44\x45VICE_ERROR\x10\x04\"\xb2\x01\n\rErrorCodeEnum\x12\x08\n\x04NONE\x10\x00\x12\x11\n\rNOT_SUPPORTED\x10\x01\x12\x0f\n\x0bINVALID_REQ\x10\x02\x12\x13\n\x0fINVALID_CHANNEL\x10\x03\x12\x12\n\x0eINVALID_CONFIG\x10\x04\x12\x14\n\x10OPERATION_FAILED\x10\x05\x12\x1b\n\x17OPERATION_NOT_AVAILABLE\x10\x06\x12\x0c\n\x08NO_SPACE\x10\x07\x12\t\n\x05OTHER\x10\x08\"\x8f\x03\n\rChannelConfig\x12-\n\x04rate\x18\x01 \x02(\x0e\x32\x1f.mpsqual.ChannelConfig.RateEnum\x12\x39\n\nlabelOrder\x18\x02 \x02(\x0e\x32%.mpsqual.ChannelConfig.LabelOrderEnum\x12\x14\n\x0cparityEnable\x18\x03 \x02(\x08\x12;\n\x0bparitySense\x18\x04 \x01(\x0e\x32&.mpsqual.ChannelConfig.ParitySenseEnum\x12%\n\tsdiFilter\x18\x05 \x01(\x0b\x32\x12.mpsqual.SDIFilter\x12)\n\x0blabelFilter\x18\x06 \x01(\x0b\x32\x14.mpsqual.LabelFilter\"\x1d\n\x08RateEnum\x12\x07\n\x03LOW\x10\x01\x12\x08\n\x04HIGH\x10\x02\"*\n\x0eLabelOrderEnum\x12\n\n\x06NORMAL\x10\x01\x12\x0c\n\x08REVERSED\x10\x02\"$\n\x0fParitySenseEnum\x12\x07\n\x03ODD\x10\x01\x12\x08\n\x04\x45VEN\x10\x02\"*\n\tSDIFilter\x12\x0e\n\x06\x65nable\x18\x01 \x02(\x08\x12\r\n\x05value\x18\x02 \x02(\r\"/\n\x0bLabelFilter\x12\x0e\n\x06\x65nable\x18\x01 \x02(\x08\x12\x10\n\x08labelMap\x18\x02 \x02(\x0c\";\n\tInputData\x12\x11\n\toverwrite\x18\x01 \x02(\x08\x12\x1b\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32\r.mpsqual.Word\"\'\n\x04Word\x12\x11\n\ttimestamp\x18\x01 \x01(\x04\x12\x0c\n\x04word\x18\x02 \x02(\r\")\n\nOutputData\x12\x1b\n\x04\x64\x61ta\x18\x01 \x03(\x0b\x32\r.mpsqual.Word')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_REQUEST_REQUESTTYPEENUM = _descriptor.EnumDescriptor(
  name='RequestTypeEnum',
  full_name='mpsqual.Request.RequestTypeEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RECEIVE_DATA', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GET_OCCUPANCY', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GET_CONFIG', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRANSMIT_DATA', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SET_CONFIG', index=4, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=199,
  serialized_end=304,
)
_sym_db.RegisterEnumDescriptor(_REQUEST_REQUESTTYPEENUM)

_RESPONSE_RESPONSETYPEENUM = _descriptor.EnumDescriptor(
  name='ResponseTypeEnum',
  full_name='mpsqual.Response.ResponseTypeEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INPUT_DATA', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OCCUPANCY', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONFIG', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATUS', index=3, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=555,
  serialized_end=628,
)
_sym_db.RegisterEnumDescriptor(_RESPONSE_RESPONSETYPEENUM)

_RESPONSE_ERRORCODEENUM = _descriptor.EnumDescriptor(
  name='ErrorCodeEnum',
  full_name='mpsqual.Response.ErrorCodeEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_SUPPORTED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_REQ', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_CHANNEL', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_CONFIG', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPERATION_FAILED', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPERATION_NOT_AVAILABLE', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NO_SPACE', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OTHER', index=8, number=8,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=631,
  serialized_end=809,
)
_sym_db.RegisterEnumDescriptor(_RESPONSE_ERRORCODEENUM)

_EVENT_EVENTTYPEENUM = _descriptor.EnumDescriptor(
  name='EventTypeEnum',
  full_name='mpsqual.Event.EventTypeEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DATA_READY', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OVERWRITE', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DRIVER_ERROR', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEVICE_ERROR', index=3, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=984,
  serialized_end=1066,
)
_sym_db.RegisterEnumDescriptor(_EVENT_EVENTTYPEENUM)

_EVENT_ERRORCODEENUM = _descriptor.EnumDescriptor(
  name='ErrorCodeEnum',
  full_name='mpsqual.Event.ErrorCodeEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_SUPPORTED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_REQ', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_CHANNEL', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_CONFIG', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPERATION_FAILED', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPERATION_NOT_AVAILABLE', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NO_SPACE', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OTHER', index=8, number=8,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=631,
  serialized_end=809,
)
_sym_db.RegisterEnumDescriptor(_EVENT_ERRORCODEENUM)

_CHANNELCONFIG_RATEENUM = _descriptor.EnumDescriptor(
  name='RateEnum',
  full_name='mpsqual.ChannelConfig.RateEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LOW', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HIGH', index=1, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1538,
  serialized_end=1567,
)
_sym_db.RegisterEnumDescriptor(_CHANNELCONFIG_RATEENUM)

_CHANNELCONFIG_LABELORDERENUM = _descriptor.EnumDescriptor(
  name='LabelOrderEnum',
  full_name='mpsqual.ChannelConfig.LabelOrderEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NORMAL', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REVERSED', index=1, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1569,
  serialized_end=1611,
)
_sym_db.RegisterEnumDescriptor(_CHANNELCONFIG_LABELORDERENUM)

_CHANNELCONFIG_PARITYSENSEENUM = _descriptor.EnumDescriptor(
  name='ParitySenseEnum',
  full_name='mpsqual.ChannelConfig.ParitySenseEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ODD', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EVEN', index=1, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1613,
  serialized_end=1649,
)
_sym_db.RegisterEnumDescriptor(_CHANNELCONFIG_PARITYSENSEENUM)


_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='mpsqual.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channelName', full_name='mpsqual.Request.channelName', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='mpsqual.Request.type', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='outputData', full_name='mpsqual.Request.outputData', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='config', full_name='mpsqual.Request.config', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _REQUEST_REQUESTTYPEENUM,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='param', full_name='mpsqual.Request.param',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=34,
  serialized_end=313,
)


_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='mpsqual.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channelName', full_name='mpsqual.Response.channelName', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='mpsqual.Response.type', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errorCode', full_name='mpsqual.Response.errorCode', index=2,
      number=3, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='inputData', full_name='mpsqual.Response.inputData', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='config', full_name='mpsqual.Response.config', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='occupancy', full_name='mpsqual.Response.occupancy', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _RESPONSE_RESPONSETYPEENUM,
    _RESPONSE_ERRORCODEENUM,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='param', full_name='mpsqual.Response.param',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=316,
  serialized_end=818,
)


_EVENT = _descriptor.Descriptor(
  name='Event',
  full_name='mpsqual.Event',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channelName', full_name='mpsqual.Event.channelName', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='mpsqual.Event.type', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errorCode', full_name='mpsqual.Event.errorCode', index=2,
      number=3, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='config', full_name='mpsqual.Event.config', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _EVENT_EVENTTYPEENUM,
    _EVENT_ERRORCODEENUM,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=821,
  serialized_end=1247,
)


_CHANNELCONFIG = _descriptor.Descriptor(
  name='ChannelConfig',
  full_name='mpsqual.ChannelConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rate', full_name='mpsqual.ChannelConfig.rate', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='labelOrder', full_name='mpsqual.ChannelConfig.labelOrder', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parityEnable', full_name='mpsqual.ChannelConfig.parityEnable', index=2,
      number=3, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='paritySense', full_name='mpsqual.ChannelConfig.paritySense', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sdiFilter', full_name='mpsqual.ChannelConfig.sdiFilter', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='labelFilter', full_name='mpsqual.ChannelConfig.labelFilter', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CHANNELCONFIG_RATEENUM,
    _CHANNELCONFIG_LABELORDERENUM,
    _CHANNELCONFIG_PARITYSENSEENUM,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1250,
  serialized_end=1649,
)


_SDIFILTER = _descriptor.Descriptor(
  name='SDIFilter',
  full_name='mpsqual.SDIFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enable', full_name='mpsqual.SDIFilter.enable', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='mpsqual.SDIFilter.value', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1651,
  serialized_end=1693,
)


_LABELFILTER = _descriptor.Descriptor(
  name='LabelFilter',
  full_name='mpsqual.LabelFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enable', full_name='mpsqual.LabelFilter.enable', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='labelMap', full_name='mpsqual.LabelFilter.labelMap', index=1,
      number=2, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1695,
  serialized_end=1742,
)


_INPUTDATA = _descriptor.Descriptor(
  name='InputData',
  full_name='mpsqual.InputData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='overwrite', full_name='mpsqual.InputData.overwrite', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='mpsqual.InputData.data', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1744,
  serialized_end=1803,
)


_WORD = _descriptor.Descriptor(
  name='Word',
  full_name='mpsqual.Word',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='mpsqual.Word.timestamp', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='word', full_name='mpsqual.Word.word', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1805,
  serialized_end=1844,
)


_OUTPUTDATA = _descriptor.Descriptor(
  name='OutputData',
  full_name='mpsqual.OutputData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='mpsqual.OutputData.data', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1846,
  serialized_end=1887,
)

_REQUEST.fields_by_name['type'].enum_type = _REQUEST_REQUESTTYPEENUM
_REQUEST.fields_by_name['outputData'].message_type = _OUTPUTDATA
_REQUEST.fields_by_name['config'].message_type = _CHANNELCONFIG
_REQUEST_REQUESTTYPEENUM.containing_type = _REQUEST
_REQUEST.oneofs_by_name['param'].fields.append(
  _REQUEST.fields_by_name['outputData'])
_REQUEST.fields_by_name['outputData'].containing_oneof = _REQUEST.oneofs_by_name['param']
_REQUEST.oneofs_by_name['param'].fields.append(
  _REQUEST.fields_by_name['config'])
_REQUEST.fields_by_name['config'].containing_oneof = _REQUEST.oneofs_by_name['param']
_RESPONSE.fields_by_name['type'].enum_type = _RESPONSE_RESPONSETYPEENUM
_RESPONSE.fields_by_name['errorCode'].enum_type = _RESPONSE_ERRORCODEENUM
_RESPONSE.fields_by_name['inputData'].message_type = _INPUTDATA
_RESPONSE.fields_by_name['config'].message_type = _CHANNELCONFIG
_RESPONSE_RESPONSETYPEENUM.containing_type = _RESPONSE
_RESPONSE_ERRORCODEENUM.containing_type = _RESPONSE
_RESPONSE.oneofs_by_name['param'].fields.append(
  _RESPONSE.fields_by_name['inputData'])
_RESPONSE.fields_by_name['inputData'].containing_oneof = _RESPONSE.oneofs_by_name['param']
_RESPONSE.oneofs_by_name['param'].fields.append(
  _RESPONSE.fields_by_name['config'])
_RESPONSE.fields_by_name['config'].containing_oneof = _RESPONSE.oneofs_by_name['param']
_RESPONSE.oneofs_by_name['param'].fields.append(
  _RESPONSE.fields_by_name['occupancy'])
_RESPONSE.fields_by_name['occupancy'].containing_oneof = _RESPONSE.oneofs_by_name['param']
_EVENT.fields_by_name['type'].enum_type = _EVENT_EVENTTYPEENUM
_EVENT.fields_by_name['errorCode'].enum_type = _EVENT_ERRORCODEENUM
_EVENT.fields_by_name['config'].message_type = _CHANNELCONFIG
_EVENT_EVENTTYPEENUM.containing_type = _EVENT
_EVENT_ERRORCODEENUM.containing_type = _EVENT
_CHANNELCONFIG.fields_by_name['rate'].enum_type = _CHANNELCONFIG_RATEENUM
_CHANNELCONFIG.fields_by_name['labelOrder'].enum_type = _CHANNELCONFIG_LABELORDERENUM
_CHANNELCONFIG.fields_by_name['paritySense'].enum_type = _CHANNELCONFIG_PARITYSENSEENUM
_CHANNELCONFIG.fields_by_name['sdiFilter'].message_type = _SDIFILTER
_CHANNELCONFIG.fields_by_name['labelFilter'].message_type = _LABELFILTER
_CHANNELCONFIG_RATEENUM.containing_type = _CHANNELCONFIG
_CHANNELCONFIG_LABELORDERENUM.containing_type = _CHANNELCONFIG
_CHANNELCONFIG_PARITYSENSEENUM.containing_type = _CHANNELCONFIG
_INPUTDATA.fields_by_name['data'].message_type = _WORD
_OUTPUTDATA.fields_by_name['data'].message_type = _WORD
DESCRIPTOR.message_types_by_name['Request'] = _REQUEST
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
DESCRIPTOR.message_types_by_name['Event'] = _EVENT
DESCRIPTOR.message_types_by_name['ChannelConfig'] = _CHANNELCONFIG
DESCRIPTOR.message_types_by_name['SDIFilter'] = _SDIFILTER
DESCRIPTOR.message_types_by_name['LabelFilter'] = _LABELFILTER
DESCRIPTOR.message_types_by_name['InputData'] = _INPUTDATA
DESCRIPTOR.message_types_by_name['Word'] = _WORD
DESCRIPTOR.message_types_by_name['OutputData'] = _OUTPUTDATA

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
  DESCRIPTOR = _REQUEST,
  __module__ = 'ARINC429Driver_pb2'
  # @@protoc_insertion_point(class_scope:mpsqual.Request)
  ))
_sym_db.RegisterMessage(Request)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSE,
  __module__ = 'ARINC429Driver_pb2'
  # @@protoc_insertion_point(class_scope:mpsqual.Response)
  ))
_sym_db.RegisterMessage(Response)

Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), dict(
  DESCRIPTOR = _EVENT,
  __module__ = 'ARINC429Driver_pb2'
  # @@protoc_insertion_point(class_scope:mpsqual.Event)
  ))
_sym_db.RegisterMessage(Event)

ChannelConfig = _reflection.GeneratedProtocolMessageType('ChannelConfig', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELCONFIG,
  __module__ = 'ARINC429Driver_pb2'
  # @@protoc_insertion_point(class_scope:mpsqual.ChannelConfig)
  ))
_sym_db.RegisterMessage(ChannelConfig)

SDIFilter = _reflection.GeneratedProtocolMessageType('SDIFilter', (_message.Message,), dict(
  DESCRIPTOR = _SDIFILTER,
  __module__ = 'ARINC429Driver_pb2'
  # @@protoc_insertion_point(class_scope:mpsqual.SDIFilter)
  ))
_sym_db.RegisterMessage(SDIFilter)

LabelFilter = _reflection.GeneratedProtocolMessageType('LabelFilter', (_message.Message,), dict(
  DESCRIPTOR = _LABELFILTER,
  __module__ = 'ARINC429Driver_pb2'
  # @@protoc_insertion_point(class_scope:mpsqual.LabelFilter)
  ))
_sym_db.RegisterMessage(LabelFilter)

InputData = _reflection.GeneratedProtocolMessageType('InputData', (_message.Message,), dict(
  DESCRIPTOR = _INPUTDATA,
  __module__ = 'ARINC429Driver_pb2'
  # @@protoc_insertion_point(class_scope:mpsqual.InputData)
  ))
_sym_db.RegisterMessage(InputData)

Word = _reflection.GeneratedProtocolMessageType('Word', (_message.Message,), dict(
  DESCRIPTOR = _WORD,
  __module__ = 'ARINC429Driver_pb2'
  # @@protoc_insertion_point(class_scope:mpsqual.Word)
  ))
_sym_db.RegisterMessage(Word)

OutputData = _reflection.GeneratedProtocolMessageType('OutputData', (_message.Message,), dict(
  DESCRIPTOR = _OUTPUTDATA,
  __module__ = 'ARINC429Driver_pb2'
  # @@protoc_insertion_point(class_scope:mpsqual.OutputData)
  ))
_sym_db.RegisterMessage(OutputData)


# @@protoc_insertion_point(module_scope)
