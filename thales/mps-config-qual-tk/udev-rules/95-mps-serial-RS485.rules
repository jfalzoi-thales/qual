# this file allows binding the ftdi_sio only with one port (the RS485)
# and automatically unbinds the driver from all other channels (so other's can use them)


# quickfilter: parse only adding ftdi_sio serial devices
ACTION!="add", GOTO="ftdi_sio_hacks_end"
KERNEL!="ttyUSB*", GOTO="ftdi_sio_hacks_end"
ENV{ID_USB_DRIVER}!="ftdi_sio", GOTO="ftdi_sio_hacks_end"
DEVPATH!="*/usb[0-9]/*/tty/ttyUSB*", GOTO="ftdi_sio_hacks_end"

# extract usb device identifier (<bus>-<port>[.port[.port[...]]]:<config>-<interface>)
PROGRAM="/bin/sh -c 'echo $DEVPATH | sed -nre s#^.*/usb[0-9]/.*/\([0-9]-[0-9\.]+:[0-9]\.[0-9]\)/tty.*\$#\\1#p'", ENV{usb_dev_id}="%c"
# if not extracted, give up to avoid doing something unexpected
ENV{usb_dev_id}=="", GOTO="ftdi_sio_hacks_end"

# if this is the RS485 channel, add a nice symlink
# SKYLAKE
ENV{usb_dev_id}=="1-8:1.2", SYMLINK+="ttyRS485", SYMLINK+="mps/ttyRS485", TAG+="systemd", GOTO="ftdi_sio_hacks_end"

# otherwise, unbind the driver so other software may use this channel
RUN+="/bin/sh -c 'echo $env{usb_dev_id} > /sys/bus/usb/drivers/ftdi_sio/unbind'"


# Exit
LABEL="ftdi_sio_hacks_end"
